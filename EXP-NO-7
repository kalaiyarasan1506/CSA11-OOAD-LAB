EX NO:07	CREDIT CARD PROCESSING SYSTEM


2	+
DATE:	
3	+
4	+
AIM: To draw the diagrams [usecase, activity, sequence, collaboration, class, statechart, component, deployment, package ] for Credit Card Processing .
5	+
6	+
SOFTWARE REQUIREMENTS SPECIFICATION:
7	+
SL.NO	SOFTWARE REQUIREMENTS SPECIFICATION
8	+
1.0	Hardware Requirements
9	+
1.1	Software Requirements
10	+
1.2	Problem Analysis and Project Plan
11	+
1.3	Project description
12	+
1.4	Reference
13	+
14	+
1.0	HARDWARE REQUIREMENTS: 
15	+
16	+
 Intel Pentium Processor I3/I5 
17	+
18	+
1.1 SOFTWARE REQUIREMENTS: 
19	+
20	+
Rational rose / Argo UML
21	+
22	+
1.2 PROBLEM ANALYSIS AND PROJECT PLANNING 
23	+
The Credit Card Processing System which is use to purchasing an item from any shop mall, and it is used to maintain the limitation of credit card balance and current transaction process could be update via credit card machine. This project mainly used for large amount of item can be easy to buy from anywhere and required transaction process should be maintained them.
24	+
25	+
1.3 PROJECT DESCRIPTION: 
26	+
This software is designed for supporting the computerized credit card processing 
27	+
System .In this system, the cardholder purchases items and pays bill with the aid of the credit card. The cashier accepts the card and proceeds for transaction using the central system. The bill is verified and the items are delivered to the cardholder. 
28	+
29	+
1.4 REFERENCES:
30	+
 IEEE Software Requirement Specification format.
31	+
USE CASE DIAGRAM: 
32	+
This diagram will contain the actors, use cases which are given below 
33	+
Actors: Cardholder, Cashier, Central system. 
34	+
Use case: Receive bill, Give card, Enter card number, Enter amount, Transaction, Receive Receipt.
35	+
CLASS DIAGRAM: 
36	+
	This diagram consists of the following classes, attributes and their operations.
37	+
ACTIVITY DIAGRAM: 
38	+
This diagram will have the activities as Start point ,End point, Decision boxes as given below: 
39	+
Activities: Receive Bill, Give card, Enter the card number, Enter the amount, Transaction, Receive Receipt 
40	+
Decision box: Verification of card 
41	+
SEQUENCE DIAGRAM: 
42	+
This diagram consists of the objects, messages and return messages. 
43	+
Object: Card Holder,Cashier , Central system 
44	+
45	+
COLLABORATION DIAGRAM: 
46	+
This diagram contains the objects and actors. This will be obtained by the completion of the sequence diagram and pressing the F5 key.
47	+
48	+
STATE CHART DIAGRAM:
49	+
	It is a technique to describe the behavior of the system. It describes all the possible states that a particular object gets into the object oriented technique. State diagram are drawn for a single class to show to the lifetime behaviour of a single objects.
50	+
COMPONENT DIAGRAM:
51	+
	The component diagram is represented by figure dependency and it is a graph of design of figure dependency. The component diagram's main purpose is to show the structural relationships between the components of a systems. It is represented by boxed figure. Dependencies are represented by communication association
52	+
DEPLOYMENT DIAGRAM:
53	+
A deployment diagram in the unified modeling language serves to model the physical deployment of artifacts on deployment targets. Deployment diagrams show "the allocation of artifacts to nodes according to the Deployments defined between them. It is represented by 3- dimentional box. Dependencies are represented by communication association. 
54	+
PACKAGE DIAGRAM:
55	+
	A package diagram in unified modeling language that depicts the dependencies between the packages that make up a model. A Package Diagram (PD) shows a grouping of elements in the OO model, and is a Cradle extension to UML. PDs can be used to show groups of classes in Class Diagrams (CDs), groups of components or processes in Component Diagrams (CPDs), or groups of processors in Deployment Diagrams (DPDs). 
56	+
There are three types of layer. They are 
57	+
o User interface layer 
58	+
59	+
o Domain layer 
60	+
61	+
o Technical services layer
62	+
PROGRAM CODING: 
63	+
64	+
CASH HOLDER:
65	+
public class cash holder
66	+
 {
67	+
68	+
	public Integer itemspurchased;
69	+
70	+
	 public void signbill()
71	+
	{
72	+
		}
73	+
74	+
}
75	+
CASHIER: 
76	+
public class cashier
77	+
 {
78	+
79	+
  public Integer name;
80	+
81	+
  public Integer cast;
82	+
83	+
  public void amount() 
84	+
{
85	+
	}
86	+
87	+
}
88	+
CENTRAL SYSTEM:
89	+
public class central sys
90	+
 {
91	+
92	+
  private Integer productname;
93	+
94	+
	  public Integer productdetails;
95	+
96	+
	  public void printbill() 
97	+
 {
98	+
	  }
99	+
	  public void validatecard()
100	+
 {
101	+
	 }	
102	+
103	+
}
104	+
105	+
RESULT:
106	+
Thus the diagrams[use case, activity, sequence, collaboration, class, state chart, component, deployment, package] for the credit card processing system has been designed, executed and output is verified.
107	+
108	+
109	+
110	+
111	+
112	+
113	+
114	+
115	+
116	+
117	+
118	+
119	+
RESULT:
120	+
Thus the diagrams[use case, activity, sequence, collaboration, class, state chart, component, deployment, package] for the credit card processing system has been designed, executed and output is verified.
