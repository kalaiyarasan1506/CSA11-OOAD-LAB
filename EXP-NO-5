
ONLINE COURSE RESERVATION SYSTEM


2	+
AIM:
3	+
To draw the diagrams [usecase, activity, sequence, collaboration, class, statechart,
4	+
component, deployment, package] for the Online course reservation system.
5	+
6	+
SOFTWARE REQUIREMENTS SPECIFICATION:
7	+
SOFTWARE REQUIREMENTS
8	+
SPECIFICATION
9	+
1.0 Hardware Requirements
10	+
1.1 Software Requirements
11	+
1.2 Problem Analysis and Project Plan
12	+
1.3 Project Description
13	+
1.4 Reference
14	+
1.0 HARDWARE REQUIREMENTS:
15	+
Intel Pentium Processor I3/I5
16	+
1.1 SOFTWARE REQUIREMENTS:
17	+
Rational rose / Argo UML
18	+
1.2 PROBLEM ANALYSIS AND PROJECT PLANNING:
19	+
The requirement form the customer is got and the requirements about the course
20	+
registration are defined. The requirements are analyzed and defined so that is enables the student
21	+
to efficiency select a course through registration system. The project scope is identified and the
22	+
problem statement is prepared.
23	+
1.3PROJECT DESCRIPTION:
24	+
This software is designed for supporting online course reservation system. This system is
25	+
organized by the central management system . The student first browses and select the desired
26	+
course of their choice. The university then checks the availability of the seat if it is available the
27	+
student is enrolled for the course.
28	+
29	+
1.4 REFERENCES:
30	+
IEEE Software Requirement Specification format.
31	+
USE CASE DIAGRAM:
32	+
This diagram will contain the actors, use cases which are given below
33	+
Actors: Student, University.
34	+
35	+
36	+
Use case: Browse course, select course, register, submit details, verify details, pay
37	+
fees, enroll student.
38	+
39	+
CLASS DIAGRAM:
40	+
This diagram consists of the following classes, attributes and their operations.
41	+
42	+
ACTIVITY DIAGRAM:
43	+
This diagram will have the activities as Start point ,End point, Decision boxes as given
44	+
below:
45	+
46	+
SEQUENCE DIAGRAM:
47	+
This diagram consists of the objects, messages and return messages.
48	+
49	+
STATE CHART DIAGRAM:
50	+
It is a technique to describe the behavior of the system. It describes all the possible states
51	+
that a particular object gets into the object oriented technique. State diagram are drawn for a
52	+
single class to show to the lifetime behaviour of a single objects
53	+
54	+
55	+
COMPONENT DIAGRAM:
56	+
57	+
The component diagram is represented by figure dependency and it is a graph of design
58	+
of figure dependency. The component diagram&#39;s main purpose is to show the structural
59	+
relationships between the components of a systems. It is represented by boxed figure.
60	+
Dependencies are represented by communication association
61	+
62	+
DEPLOYMENT DIAGRAM:
63	+
64	+
A deployment diagram in the unified modeling language serves to model the physical
65	+
deployment of artifacts on deployment targets. Deployment diagrams show &quot;the allocation of
66	+
artifacts to nodes according to the Deployments defined between them. It is represented by 3-
67	+
dimentional box. Dependencies are represented by communication association.
68	+
69	+
PACKAGE DIAGRAM:
70	+
71	+
A package diagram in unified modeling language that depicts the dependencies between
72	+
the packages that make up a model. A Package Diagram (PD) shows a grouping of elements in
73	+
the OO model, and is a Cradle extension to UML. PDs can be used to show groups of classes in
74	+
Class Diagrams (CDs), groups of components or processes in Component Diagrams (CPDs), or
75	+
groups of processors in Deployment Diagrams (DPDs).
76	+
There are three types of layer. They are
77	+
o User interface layer
78	+
o Domain layer
79	+
o Technical services layer
80	+
PROGRAM CODING:
81	+
82	+
CENTRAL MANAGEMENT SYSTEM
83	+
Public class central management system
84	+
{
85	+
Public integer details;
86	+
Public integer verify details;
87	+
Public void verify()
88	+
{
89	+
}
90	+
Public void enroll()
91	+
{
92	+
}
93	+
}
94	+
STUDENT:
95	+
Public class student
96	+
{
97	+
Public integer name;
98	+
Public integer address;
99	+
Public integer marks;
100	+
Public void browse()
101	+
{
102	+
}
103	+
Public void select()
104	+
{
105	+
}
106	+
Public void register()
107	+
108	+
{
109	+
}
110	+
}
111	+
UNIVERSITY:
112	+
Public class university
113	+
{
114	+
Public integer store details;
115	+
Public integer verify details;
116	+
Public voidverify()
117	+
{
118	+
}
119	+
Public void enroll()
120	+
{
121	+
}
122	+
}
123	+
124	+
RESULT:
125	+
Thus draw the diagrams [usecase, activity, sequence, collaboration, class,state chart,
126	+
component, deployment , package] for the Online course reservation system has been designed
127	+
executed and output is verified.
