E-TICKETING


2	+
AIM:
3	+
To draw the diagrams[use case, activity, sequence, collaboration, class, state chart,
4	+
component, deployment, package] for the E-ticketing system.
5	+
6	+
SOFTWARE REQUIREMENTS SPECIFICATION
7	+
8	+
SOFTWARE REQUIREMENTS
9	+
SPECIFICATION
10	+
1.0 Hardware Requirements
11	+
1.1 Software Requirements
12	+
1.2 Problem Analysis and Project Plan
13	+
1.3 Project description
14	+
1.4 Reference
15	+
1.0 HARDWARE REQUIREMENTS:
16	+
Intel Pentium Processor I3/I5
17	+
1.1 SOFTWARE REQUIREMENTS:
18	+
Rational rose / Argo UML
19	+
1.2 PROBLEM ANALYSIS AND PROJECT PLANNING
20	+
In the E-Ticketing system the main process is a applicant have to login the database then
21	+
the database verifies that particular username and password then the user must fill the details
22	+
about their personal details then selecting the flight and the database books the ticket then send it
23	+
to the applicant then searching the flight or else cancelling the process
24	+
1.3 PROJECT DESCRIPTION:
25	+
This software is designed for supporting the computerized e-ticketing. This is widely
26	+
used by the passenger for reserving the tickets for their travel. This E-ticketing is organized by
27	+
the central system. The information is provided from the railway reservation system.
28	+
29	+
1.4 REFERENCES:
30	+
IEEE Software Requirement Specification format.
31	+
32	+
USE CASE DIAGRAM:
33	+
This diagram will contain the actors, use cases which are given below
34	+
Actors: Passenger, Railway reservation system..
35	+
Use case: Status, reservation, cancellation, enter the train number, enter the
36	+
number of seats, availability of seats, acceptance of ticket.
37	+
CLASS DIAGRAM:
38	+
This diagram consists of the following classes, attributes and their operations.
39	+
CLASSES ATTRIBUTES OPERATIONS
40	+
Central computer Train name,
41	+
Passenger name
42	+
ACTIVITY DIAGRAM:
43	+
This diagram will have the activities as Start point, End point, Decision boxes as given
44	+
below:
45	+
46	+
Activities: enter the train number, enter the number of seats, acceptance of ticket,
47	+
accept seat.
48	+
Decision box: Check availability of seats whether it is present or not.
49	+
Reservation(), login()
50	+
51	+
Passenger Passenger age Login()
52	+
Railway reservation system Train number Cancellation()
53	+
SEQUENCE DIAGRAM:
54	+
This diagram consists of the objects, messages and return messages.
55	+
Object: Passenger, Railway reservation system, Central computer.
56	+
57	+
COLLABORATION DIAGRAM:
58	+
This diagram contains the objects and actors. This will be obtained by the completion of
59	+
the sequence diagram and pressing the F5 key.
60	+
STATE CHART DIAGRAM:
61	+
It is a technique to describe the behavior of the system. It describes all the possible states
62	+
that a particular object gets into the object oriented technique. State diagram are drawn for a
63	+
single class to show to the lifetime behaviour of a single objects
64	+
COMPONENT DIAGRAM:
65	+
The component diagram is represented by figure dependency and it is a graph of design
66	+
of figure dependency. The component diagram&#39;s main purpose is to show the structural
67	+
relationships between the components of a systems. It is represented by boxed figure.
68	+
Dependencies are represented by communication association
69	+
DEPLOYMENT DIAGRAM:
70	+
A deployment diagram in the unified modeling language serves to model the physical
71	+
deployment of artifacts on deployment targets. Deployment diagrams show &quot;the allocation of
72	+
artifacts to nodes according to the Deployments defined between them. It is represented by 3-
73	+
dimentional box. Dependencies are represented by communication association.
74	+
75	+
PACKAGE DIAGRAM:
76	+
A package diagram in unified modeling language that depicts the dependencies between
77	+
the packages that make up a model. A Package Diagram (PD) shows a grouping of elements in
78	+
the OO model, and is a Cradle extension to UML. PDs can be used to show groups of classes in
79	+
Class Diagrams (CDs), groups of components or processes in Component Diagrams (CPDs), or
80	+
groups of processors in Deployment Diagrams (DPDs).
81	+
There are three types of layer. They are
82	+
o User interface layer
83	+
o Domain layer
84	+
o Technical services layer
85	+
86	+
PROGRAM CODING:
87	+
PASSENGER:
88	+
Public class passenger
89	+
{
90	+
Public integer passenger passenger name;
91	+
Public integer passenger passenger age;
92	+
Public integer train no;
93	+
Public void passenger()
94	+
{
95	+
}
96	+
97	+
Public void new operation()
98	+
{
99	+
}
100	+
}
101	+
CENTRAL MANAGEMENT SYSTEM:
102	+
Public class central management
103	+
{
104	+
Public integer train name;
105	+
Public integer passenger name;
106	+
Public void reservation()
107	+
{
108	+
}
109	+
Public void cancellation()
110	+
{
111	+
112	+
}
113	+
Public void status()
114	+
{
115	+
}
116	+
Public void login()
117	+
{
118	+
}
119	+
Private void management()
120	+
{
121	+
}
122	+
}
123	+
RAILWAY RESERVATION SYSTEM:
124	+
Public class railway reservation system
125	+
{
126	+
Public integer trainno;
127	+
Public integer train name;
128	+
Public integer passenger name;
129	+
Public void status()
130	+
{
131	+
}
132	+
Public void reservation()
133	+
{
134	+
}
135	+
Public void cancellation()
136	+
{
137	+
138	+
}
139	+
Public void railway reservation system()
140	+
{
141	+
}
142	+
}
143	+
144	+
RESULT:
145	+
Thus the diagrams[use case, activity, sequence, collaboration, class, statechart,
146	+
component, deployment, package] for the E-ticketing system has been designed, executed and
147	+
output is verified.
9 commit comments
Comments
9
