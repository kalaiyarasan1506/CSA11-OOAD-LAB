1 +
FOREIGN TRADING SYSTEM
2 +
AIM:
3 +
To draw the diagrams [Use case, Activity, Sequence, Collaboration, Class, State chart,
4 +
Component, Deployment, package] for foreign trading system
5 +
SOFTWARE REQUIREMENTS SPECIFICATION

6 +
7 +
SL.NO SOFTWARE REQUIREMENTS SPECIFICATION
8 +
1.0 Hardware Requirements
9 +
1.1 Software Requirements
10 +
1.2 Problem Analysis and Project Plan
11 +
1.3 Project description
12 +
1.4 Reference
13 +
14 +
1.0 HARDWARE REQUIREMENTS:
15 +
16 +
Intel Pentium Processor I3/I5
17 +
18 +
1.1 SOFTWARE REQUIREMENTS:
19 +
20 +
Rational rose / Argo UML
21 +
22 +
1.2 PROJECT ANALYSIS AND PROJECT PLANNING
23 +
24 +
The initial requirements to develop the project about the mechanism of the Foreign Trading System is bought from the trader. The requirements are analyzed and refined which enables the analyst (administrator) to efficiently use the Foreign Trading System. The complete project analysis is developed after the whole project analysis explaining about the scope and the project statement is prepared.
25 +
26 +
1.3 PROJECT DESCRIPTION:
27 +
28 +
This software is designed to maintain the details about the trading system that exists between the foreign countries. These details are hold by the trading management system. The details to the system are provided by the customer and the supplier.
29 +

30 +
1.4 REFERENCES:
31 +
IEEE Software Requirement Specification format.
32 +
33 +
USE CASE DIAGRAM:
34 +
This diagram will contain the actors, use cases which are given below
35 +
Actors: Customer, Supplier, Custom officer
36 +
Use case: Order of product, Quantity, Specify the amount
37 +
38 +
CLASS DIAGRAM:
39 +
This diagram consists of the following classes, attributes and their operations.
40 +
41 +
CLASSES ATTRIBUTES OPERATIONS
42 +
Trading management system Verify product Transport()
43 +
Customer Quality Payment()
44 +
Supplier Product supply Money transfer()
45 +
ACTIVITY DIAGRAM:
46 +
This diagram will have the activities as Start point ,End point, Decision boxes as given.
47 +
Activities: Order of the product, Specify amount, Payment, Money transfer
48 +
Decision box: Check for availability
49 +
SEQUENCE DIAGRAM:
50 +
This diagram consists of the objects, messages and return messages.
51 +
Object: Customer, Supplier, Trading management system
52 +
53 +
COLLABORATION DIAGRAM:
54 +
This diagram contains the objects and actors. This will be obtained by the completion of the sequence diagram and pressing the F5 key.
55 +
STATECHART DIAGRAM:
56 +
It is a technique to describe the behavior of the system. It describes all the possible states that a particular object gets into the object oriented technique. State diagram are drawn for a single class to show to the lifetime behaviour of a single objects
57 +
COMPONENT DIAGRAM:
58 +

59 +
The component diagram is represented by figure dependency and it is a graph of design of figure dependency. The component diagram's main purpose is to show the structural relationships between the components of a systems. It is represented by boxed figure. Dependencies are represented by communication association.
60 +
DEPLOYMENT DIAGRAM:
61 +
A deployment diagram in the unified modeling language serves to model the physical deployment of artifacts on deployment targets. Deployment diagrams show "the allocation of artifacts to nodes according to the Deployments defined between them. It is represented by 3- dimentional box. Dependencies are represented by communication association
62 +
PACKAGE DIAGRAM:
63 +

64 +
A package diagram in unified modeling language that depicts the dependencies between the packages that make up a model. A Package Diagram (PD) shows a grouping of elements in the OO model, and is a Cradle extension to UML. PDs can be used to show groups of classes in Class Diagrams (CDs), groups of components or processes in Component Diagrams (CPDs), or groups of processors in Deployment Diagrams (DPDs).
65 +
There are three types of layer. They are
66 +
o User interface layer
67 +
68 +
o Domain layer
69 +
70 +
o Technical services layer
71 +
72 +
PROGRAM CODING:
73 +
TRADING MANAGEMENT SYSTEM:
74 +
public class trading management system
75 +
{
76 +
public integer verify product; public integer amount;
77 +
public void transport()
78 +
{
79 +
}
80 +
public void money transfer()
81 +
{
82 +
}
83 +
}
84 +
CUSTOMER:
85 +
public class customer
86 +
{
87 +
Public integer order product; Public integer amount;
88 +
Public void payment()
89 +
{
90 +
}
91 +
Public void delivery()
92 +
{
93 +
}
94 +
}
95 +

96 +
SUPPLIER:
97 +
Public class supplier
98 +
{
99 +
Public integer supply;
100 +
Public void available product()
101 +
{
102 +
}
103 +
}
104 +
105 +
106 +
RESULT:
107 +
Thus thethe diagrams [Usecase, Activity, Sequence, Collaboration, Class, Statechart, Component, Deployment, package ] for foreign trading system has been designed, executed and output is verified.
