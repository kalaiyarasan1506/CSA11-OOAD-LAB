BOOK BANK REGISTRATION SYSTEM
2	+
AIM:
3	+
To draw the diagrams [usecase, activity, sequence, collaboration, class, statechart,
4	+
collaboration, component, deployment, package ] for the Book bank registration system.
5	+
SOFTWARE REQUIREMENTS SPECIFICATION
6	+
7	+
SOFTWARE REQUIREMENTS
8	+
SPECIFICATION
9	+
1.0 Hardware Requirements
10	+
1.1 Software Requirements
11	+
1.2 Problem Analysis and Project Plan
12	+
1.3 Project Description
13	+
1.4 Reference
14	+
15	+
1.0 HARDWARE REQUIREMENTS:
16	+
Intel Pentium Processor I3/I5
17	+
1.1 SOFTWARE REQUIREMENTS:
18	+
Rational rose /Argo UML
19	+
1.2 PROBLEM ANALYSIS AND PROJECT PLAN
20	+
To simplify the process of applying passport, software has been created by designing
21	+
through rational rose tool. Initially the applicant login the passport automation system and
22	+
submits his details. These details are stored in the database and verification process done by the
23	+
passport administrator, regional administrator and police the passport is issued to the applicant.
24	+
1.3 PROJECT DESCRIPTION:
25	+
This software is designed for the verification of the details of the student by the central
26	+
computer. The details regarding the student will be provided to the central computer through the
27	+
administrator in the book bank and the computer will verify the details of student and provide
28	+
approval to the office. Then the books that are needed by the student will issue from the office to
29	+
the him.
30	+
1.4 REFERENCES:
31	+
IEEE Software Requirement Specification format.
32	+
33	+
34	+
USE CASE DIAGRAM:
35	+
This diagram will contain the actors, use cases which are given below
36	+
Actors: Student, book bank admin.
37	+
Use case: Student details, register, verify student id, return previous books,
38	+
request of books, issue of books, check of book availability.
39	+
40	+
CLASS DIAGRAM:
41	+
This diagram consists of the following classes, attributes and their operations.
42	+
CLASSES ATTRIBTES OPERATIONS
43	+
Computer Student record,
44	+
Book list
45	+
46	+
Enter issue(),
47	+
Check availability()
48	+
Stud Student details Request for books(),
49	+
50	+
Register()
51	+
52	+
Admin Student details,
53	+
Book list
54	+
55	+
Verify student id(),
56	+
Issue books()  
57	+
58	+
ACTIVITY DIAGRAM:
59	+
This diagram will have the activities as Start point, End point, Decision boxes as given
60	+
below:
61	+
62	+
Activities: Verify id, return books, request for books, enter book issue details in
63	+
system, issue books
64	+
Decision box: Check availability of books whether it is present or not.
65	+
66	+
67	+
SEQUENCE DIAGRAM:
68	+
This diagram consists of the objects, messages and return messages.
69	+
Object: Stud, admin, computer
70	+
71	+
COLLABORATION DIAGRAM:
72	+
This diagram contains the objects and actors. This will be obtained by the completion of
73	+
the sequence diagram and pressing the F5 key.  
74	+
75	+
STATE CHART DIAGRAM
76	+
The purpose of state chart diagram is to understand the algorithm involved in performing
77	+
a method. It is also called as state diagram. A state is represented as a round box, which may
78	+
contain one or more compartments. An initial state is represented as small dot. An final state is
79	+
represented as circle surrounding a small dot.
80	+
81	+
82	+
COMPONENT DIAGRAM
83	+
The component diagram&#39;s main purpose is to show the structural relationships between
84	+
the components of a system. It is represented by boxed figure. Dependencies are represented by
85	+
communication association
86	+
87	+
88	+
DEPLOYMENT DIAGRAM
89	+
A deployment diagram in the unified modeling language serves to model the physical
90	+
deployment of artifacts on deployment targets. Deployment diagrams show &quot;the allocation of
91	+
artifacts to nodes according to the Deployments defined between them. It is represented by 3-
92	+
dimentional box. Dependencies are represented by communication association
93	+
94	+
95	+
PACKAGE DIAGRAM:
96	+
97	+
A package diagram in unified modeling language that depicts the dependencies
98	+
between the packages that make up a model. A Package Diagram (PD) shows a grouping of
99	+
elements in the OO model, and is a Cradle extension to UML. PDs can be used to show groups
100	+
of classes in Class Diagrams (CDs), groups of components or processes in Component Diagrams
101	+
(CPDs), or groups of processors in Deployment Diagrams (DPDs).
102	+
There are three types of layer. They are
103	+
o User interface layer
104	+
o Domain layer
105	+
o Technical services layer
106	+
107	+
PROGRAM CODING:
108	+
ADMIN:
109	+
Public class admin
110	+
{
111	+
Public integer student details;
112	+
Public integer book list;
113	+
Public void verify stud id()
114	+
{
115	+
}
116	+
Public void check for availability()
117	+
{
118	+
}
119	+
Public void issue books()
120	+
{
121	+
}
122	+
Public void order for new author()
123	+
{
124	+
}
125	+
Public void maintains stud details()
126	+
{
127	+
}
128	+
}
129	+
130	+
131	+
STUDENT:
132	+
Public class stud
133	+
{
134	+
Public integer studdetails;
135	+
Public void request for books()
136	+
{
137	+
}
138	+
Public void register()
139	+
{
140	+
}
141	+
COMPUTER:
142	+
Public class computer
143	+
{
144	+
Public integer stud record;
145	+
Public integer booklist;
146	+
Public void maintain stud rec()
147	+
{
148	+
}
149	+
Public void enter issue()
150	+
{
151	+
}
152	+
Public void order new author()
153	+
{
154	+
}
155	+
156	+
157	+
Public void check availability()
158	+
{
159	+
}
160	+
}
161	+
162	+
RESULT:
163	+
Thus the diagrams [use case, activity, sequence, collaboration, class, collaboration,
164	+
component, deployment, package ] for the Book bank registration system has been designed,
165	+
executed and output is verified.
